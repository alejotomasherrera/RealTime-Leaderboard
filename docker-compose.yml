services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # Puerto para las conexiones de aplicaciones
      - "15672:15672" # Puerto para la interfaz de administraci√≥n
    environment:
      RABBITMQ_DEFAULT_USER: admin # Usuario predeterminado
      RABBITMQ_DEFAULT_PASS: admin
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.25"

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "1.0"

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "5451:5451"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    depends_on:
      - mongodb
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: "0.25"

  eureka-service:
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    container_name: eureka-service
    ports:
      - "8761:8761"
    depends_on:
      - rabbitmq
      - redis
      - mongodb
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - "8080:8080"
    depends_on:
      - eureka-service
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"

  score-service:
    build:
      context: ./score-service
      dockerfile: Dockerfile
    container_name: score-service
    ports:
      - "8082:8082"
    depends_on:
      - eureka-service
      - rabbitmq
      - redis
      - mongodb
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8083:8083"
    depends_on:
      - eureka-service
      - rabbitmq
      - redis
      - mongodb
    environment:
      SPRING_PROFILES_ACTIVE: docker
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.5"

volumes:
  kafka_data:
  redis_data:
  mongo_data: